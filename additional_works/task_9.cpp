/* Задача № 9
Умова:
Написати програму, яка перетворює двовимірний масив на одновимірний. Рядки в одновимірному розташовуються за
максимальним значенням суми їхніх елементів.
                                                                        ***
Що робить ця програма/цей код:
Програма створює вихідну матрицю, перетворює її на одномірний масив і має рядки одномірного масиву таким чином,
щоб рядок з максимальною сумою елементів був останнім.
Потім програма виводить вихідну матрицю та змінену одномірну матрицю.
                                                                        ***
Покроковий опис роботи коду/вирішення задачі:
1. Створюється вихідна матриця за допомогою вектора з векторів цілих чисел.
2. Створюється вектор цілих чисел, що міститиме одновимірну матрицю.
3. Для перетворення двовимірного масиву в одномірний, відбувається подвійний цикл i і j, який проходить по кожному елементу двовимірного масиву. Кожен елемент додається до одномірного масиву за допомогою методу push_back.
4. Для розташування рядків одновимірного масиву обчислюється сума кожного рядка у вихідній матриці, зберігаючи індекс рядка з максимальною сумою та саме значення максимальної суми.
5. Відбувається перестановка рядків одновимірного масиву за допомогою вбудованої функції rotate, щоб перемістити рядок з максимальною сумою в кінець.
6. Виводиться вихідна матриця та одновимірний масив із зміненим порядком елементів.
*/

#include <iostream>
#include <vector>

using namespace std;

int main()
{
    // Создание исходной матрицы
    vector<vector<int>> matrix = {
        {1, 2, 3},
        {4, 5, 6},
        {7, 8, 9},
        {10, 11, 12}};

    // Превращение двумерного массива в одномерный
    vector<int> flatMatrix;
    for (int i = 0; i < matrix.size(); i++)
    {
        for (int j = 0; j < matrix[i].size(); j++)
        {
            flatMatrix.push_back(matrix[i][j]);
        }
    }

    // Расположение строк одномерного массива
    int maxSum = 0;
    int maxSumIndex = 0;
    for (int i = 0; i < matrix.size(); i++)
    {
        int rowSum = 0;
        for (int j = 0; j < matrix[i].size(); j++)
        {
            rowSum += matrix[i][j];
        }
        if (rowSum > maxSum)
        {
            maxSum = rowSum;
            maxSumIndex = i;
        }
    }

    // Переставляем строки так, чтобы строка с максимальной суммой была последней
    for (int i = 0; i < matrix.size() - 1; i++)
    {
        if (i < maxSumIndex)
        {
            rotate(flatMatrix.begin(), flatMatrix.begin() + matrix[i].size(), flatMatrix.begin() + matrix[i + 1].size());
        }
        else
        {
            rotate(flatMatrix.begin() + matrix[i].size(), flatMatrix.begin() + matrix[i + 1].size(), flatMatrix.end());
        }
    }

    // Вывод исходной матрицы и измененной одномерной матрицы
    cout << "Исходная матрица:" << endl;
    for (int i = 0; i < matrix.size(); i++)
    {
        for (int j = 0; j < matrix[i].size(); j++)
        {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    cout << "Одномерная матрица с измененным порядком элементов:" << endl;
    for (int i = 0; i < flatMatrix.size(); i++)
    {
        cout << flatMatrix[i] << " ";
    }
    cout << endl;

    return 0;
}
