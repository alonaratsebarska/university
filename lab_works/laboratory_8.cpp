/* Лабораторна робота № 8
Варіант No1.
Умова:
Дано матрицю розміру M × N і цілі числа K1 і K2 (1 ≤ K1 < K2 ≤ M ). Поміняти місцями рядки матриці з номерами K1 та K2.
При розв’язанні використати динамічний двовимірний масив, для роботи з яким розробити відповідні функції.
                                                                        ***
Що робить ця програма/цей код:
Ця програма дозволяє поміняти місцями рядки в матриці.
Вхідні дані: розміри матриці M та N, номери рядків K1 та K2, які необхідно поміняти місцями.
Далі слідує введення елементів матриці.
У програмі спочатку виділяється пам'ять для динамічного двовимірного масиву, який є матрицею.
Потім за допомогою циклів зчитується матриця та викликається функція swapRows, яка поміняє місцями вказані рядки.
Зрештою, матриця виводиться на екран.
Після виконання програми пам'ять, виділена масиву, звільняється.
                                                                        ***
Покроковий опис роботи коду/вирішення задачі:
Цей код вирішує завдання з перестановки рядків у двовимірному масиві.

1. Читання розмірів матриці (m рядків і n стовпців) та номерів рядків, які необхідно поміняти місцями (k1 і k2).
2. Виділення пам'яті двовимірної матриці за допомогою оператора new.
3. Читання значень елементів матриці із вхідних даних.
4. Виклик функції swapRows, яка замінить місцями елементи у двох рядках матриці.
5. Виведення матриці на екран.
6. Звільнення виділеної пам'яті.
7. Вихід із програми.
У результаті отримуємо програму, яка може переставляти рядки у двовимірному масиві.
*/

#include <iostream>

using namespace std;

void swapRows(int **matrix, int row1, int row2, int cols)
{
    int temp;
    for (int i = 0; i < cols; i++)
    {
        temp = matrix[row1][i];
        matrix[row1][i] = matrix[row2][i];
        matrix[row2][i] = temp;
    }
}

int main()
{
    int m, n, k1, k2;
    cin >> m >> n >> k1 >> k2;
    k1--;
    k2--;

    if (k1 < 0 || k1 >= m || k2 < 0 || k2 >= m)
    {
        cout << "Invalid row numbers" << endl;
        return 1;
    }

    int **matrix = new int *[m];
    for (int i = 0; i < m; i++)
    {
        matrix[i] = new int[n];
    }

    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cin >> matrix[i][j];
        }
    }

    swapRows(matrix, k1, k2, n);

    for (int i = 0; i < m; i++)
    {
        for (int j = 0; j < n; j++)
        {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }

    for (int i = 0; i < m; i++)
    {
        delete[] matrix[i];
    }
    delete[] matrix;

    return 0;
}